{
  "instructions": [
    "await page.evaluate(() => {\n    const nonMatchingProps = [];\n    const parseAssertDictPropDict = {\"a\":\"b\"};\n    for (const [parseAssertDictPropKey, parseAssertDictPropValue] of Object.entries(parseAssertDictPropDict)) {\n        if (document[parseAssertDictPropKey] === undefined) {\n            nonMatchingProps.push('Unknown document property `' + parseAssertDictPropKey + '`');\n            continue;\n        }\n        if (!String(document[parseAssertDictPropKey]).startsWith(parseAssertDictPropValue)) {\n            nonMatchingProps.push('Property `' + parseAssertDictPropKey + '` (`' + document[parseAssertDictPropKey] + '`) does not start with `' + parseAssertDictPropValue + '`');\n        }\n        if (!String(document[parseAssertDictPropKey]).endsWith(parseAssertDictPropValue)) {\n            nonMatchingProps.push('Property `' + parseAssertDictPropKey + '` (`' + document[parseAssertDictPropKey] + '`) does not end with `' + parseAssertDictPropValue + '`');\n        }\n    }\n    if (nonMatchingProps.length !== 0) {\n        const props = nonMatchingProps.join(\", \");\n        throw \"The following errors happened: [\" + props + \"]\";\n    }\n});"
  ],
  "wait": false,
  "checkResult": true
}
