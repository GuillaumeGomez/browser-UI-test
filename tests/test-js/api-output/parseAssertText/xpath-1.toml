instructions = [
  """async function checkTextForElem(elem) {
    await elem.evaluate(e => {
        const errors = [];
        const value = \"b\";
        const elemText = browserUiTestHelpers.getElemText(e, value);
        if (elemText !== value) {
            errors.push(\"`\" + elemText + \"` isn't equal to `\" + value + \"`\");
        }
        if (errors.length !== 0) {
            const errs = errors.join(\", \");
            throw \"The following errors happened: [\" + errs + \"]\";
        }
    });
}

let parseAssertElemStr = await page.$x(\"//a\");
if (parseAssertElemStr.length === 0) { throw 'XPath \"//a\" not found'; }
parseAssertElemStr = parseAssertElemStr[0];
await checkTextForElem(parseAssertElemStr);""",
]
wait = false
checkResult = true
warnings = [
]
