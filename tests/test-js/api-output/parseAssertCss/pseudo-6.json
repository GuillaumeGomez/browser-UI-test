{
  "instructions": [
    "let parseAssertElemCss = await page.$$(\"a ::after\");\nif (parseAssertElemCss.length === 0) { throw '\"a ::after\" not found'; }\nfor (let i = 0, len = parseAssertElemCss.length; i < len; ++i) {\n    await page.evaluate(e => {\n        const nonMatchingProps = [];\n        let assertComputedStyle = getComputedStyle(e);\n        const parseAssertElemCssDict = {\"a\":\"1\"};\n        for (const [parseAssertElemCssKey, parseAssertElemCssValue] of Object.entries(parseAssertElemCssDict)) {\n            const localErr = [];\n            let succeeded = false;\n            if (e.style[parseAssertElemCssKey] != parseAssertElemCssValue && assertComputedStyle[parseAssertElemCssKey] != parseAssertElemCssValue) {\n                if (typeof assertComputedStyle[parseAssertElemCssKey] === \"string\" && assertComputedStyle[parseAssertElemCssKey].search(/^(\\d+\\.\\d+px)$/g) === 0) {\n                    if (browserUiTestHelpers.extractFloatOrZero(assertComputedStyle[parseAssertElemCssKey], true) + \"px\" !== parseAssertElemCssValue) {\n                        localErr.push('expected `' + parseAssertElemCssValue + '` for key `' + parseAssertElemCssKey + '`, found `' + assertComputedStyle[parseAssertElemCssKey] + '` (or `' + browserUiTestHelpers.extractFloatOrZero(assertComputedStyle[parseAssertElemCssKey], true) + 'px`)');\n                    }\n                    succeeded = true;\n                }\n                if (!succeeded) {\n                    localErr.push('expected `' + parseAssertElemCssValue + '` for key `' + parseAssertElemCssKey + '`, found `' + assertComputedStyle[parseAssertElemCssKey] + '`');\n                }\n            }\n            nonMatchingProps.push(...localErr);\n        }\n        if (nonMatchingProps.length !== 0) {\n            const props = nonMatchingProps.join(\", \");\n            throw \"The following errors happened (for selector `a ::after`): [\" + props + \"]\";\n        }\n    }, parseAssertElemCss[i]);\n}"
  ],
  "wait": false,
  "warnings": [],
  "checkResult": true
}
