instructions = [
  """await page.evaluate(() => {
    const nonMatchingProps = [];
    const parseAssertDictPropDict = {\"a\":\"b\"};
    const undefProps = [];
    for (const prop of undefProps) {
        if (document[prop] !== undefined) {
            continue;
        }
        nonMatchingProps.push(\"Property named `\" + prop + \"` doesn't exist\");
    }
    for (const [parseAssertDictPropKey, parseAssertDictPropValue] of Object.entries(parseAssertDictPropDict)) {
        if (document[parseAssertDictPropKey] === undefined) {
            continue;
        }
        if (String(document[parseAssertDictPropKey]).endsWith(parseAssertDictPropValue)) {
            nonMatchingProps.push(\"assert didn't fail for property `\" + parseAssertDictPropKey + '` (for ENDS_WITH check)');
        }
    }
    if (nonMatchingProps.length !== 0) {
        const props = nonMatchingProps.join(\", \");
        throw \"The following errors happened: [\" + props + \"]\";
    }
});""",
]
wait = false
checkResult = true
