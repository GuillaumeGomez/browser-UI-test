instructions = [
  """let parseCompareElementsPos1 = await page.$(\"a\");
if (parseCompareElementsPos1 === null) { throw '\"a\" not found'; }
let parseCompareElementsPos2 = await page.$(\"b\");
if (parseCompareElementsPos2 === null) { throw '\"b\" not found'; }
await page.evaluate((elem1, elem2) => {
function checkY(e1, e2) {
try {
let y1 = e1.getBoundingClientRect().top;
let pseudoStyle1 = window.getComputedStyle(e1, \"::after\");
let style1 = window.getComputedStyle(e1);
y1 += browserUiTestHelpers.extractFloatOrZero(pseudoStyle1.top) - browserUiTestHelpers.extractFloatOrZero(style1.marginTop);
let y2 = e2.getBoundingClientRect().top;
if (y1 !== y2) { throw \"different Y values: \" + y1 + \" != \" + y2; }

} catch(e) { return; } throw \"assert didn't fail\";}
checkY(elem1, elem2);
function checkX(e1, e2) {
try {
let x1 = e1.getBoundingClientRect().left;
let pseudoStyle1 = window.getComputedStyle(e1, \"::after\");
let style1 = window.getComputedStyle(e1);
x1 += browserUiTestHelpers.extractFloatOrZero(pseudoStyle1.left) - browserUiTestHelpers.extractFloatOrZero(style1.marginLeft);
let x2 = e2.getBoundingClientRect().left;
if (x1 !== x2) { throw \"different X values: \" + x1 + \" != \" + x2; }

} catch(e) { return; } throw \"assert didn't fail\";}
checkX(elem1, elem2);
}, parseCompareElementsPos1, parseCompareElementsPos2);""",
]
wait = false
checkResult = true
