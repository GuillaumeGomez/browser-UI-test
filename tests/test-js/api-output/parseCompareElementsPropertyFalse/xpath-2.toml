instructions = [
  """let parseCompareElementsProp1 = await page.$(\"a\");
if (parseCompareElementsProp1 === null) { throw '\"a\" not found'; }
let parseCompareElementsProp2 = await page.$x(\"//b\");
if (parseCompareElementsProp2.length === 0) { throw 'XPath \"//b\" not found'; }
parseCompareElementsProp2 = parseCompareElementsProp2[0];
const parseCompareElementsProps = [\"margin\"];
for (const property of parseCompareElementsProps) {
try {
const value = await parseCompareElementsProp1.evaluateHandle((e, p) => {
return String(e[p]);
}, property);
await parseCompareElementsProp2.evaluate((e, v, p) => {
if (v !== String(e[p])) {
throw p + \": `\" + v + \"` !== `\" + String(e[p]) + \"`\";
}
}, value, property);
} catch(e) { continue; } throw \"assert didn't fail\";
}""",
]
wait = false
checkResult = true
