{
  "instructions": [
    "let parseAssertElemProp = await page.$x(\"//a\");\nif (parseAssertElemProp.length === 0) { throw 'XPath \"//a\" not found'; }\nfor (let i = 0, len = parseAssertElemProp.length; i < len; ++i) {\n    await page.evaluate(e => {\n        const nonMatchingProps = [];\n        const parseAssertElemPropDict = {\"a\":\"1\"};\n        for (const [parseAssertElemPropKey, parseAssertElemPropValue] of Object.entries(parseAssertElemPropDict)) {\n            if (e[parseAssertElemPropKey] === undefined) {\n                nonMatchingProps.push('Unknown property `' + parseAssertElemPropKey + '`');\n                continue;\n            }\n            if (String(e[parseAssertElemPropKey]) != parseAssertElemPropValue) {\n                nonMatchingProps.push('Expected `' + parseAssertElemPropValue + '` for property `' + parseAssertElemPropKey + '`, found `' + e[parseAssertElemPropKey] + '`');\n            }\n        }\n        if (nonMatchingProps.length !== 0) {\n            const props = nonMatchingProps.join(\", \");\n            throw \"The following errors happened (for XPath `//a`): [\" + props + \"]\";\n        }\n    }, parseAssertElemProp[i]);\n}"
  ],
  "wait": false,
  "warnings": [],
  "checkResult": true
}
