instructions = [
  """const timeLimit = page.getDefaultTimeout();
const timeAdd = 50;
let allTime = 0;
let parseWaitForText = null;
const value = \"b\";
let computedEntry;
while (true) {
    while (true) {
        parseWaitForText = await page.$x(\"//a\");
        if (parseWaitForText.length !== 0) {
            parseWaitForText = parseWaitForText[0];
            break;
        }
        await new Promise(r => setTimeout(r, timeAdd));
        if (timeLimit === 0) {
            continue;
        }
        allTime += timeAdd;
        if (allTime >= timeLimit) {
            throw new Error(\"The following XPath \\\"//a\\\" was not found\");
        }
    }
    computedEntry = await page.evaluate(e => {
        return browserUiTestHelpers.getElemText(e, \"b\");
    }, parseWaitForText);
    if (computedEntry === value) {
        break;
    }
    await new Promise(r => setTimeout(r, timeAdd));
    if (timeLimit === 0) {
        continue;
    }
    allTime += timeAdd;
    if (allTime >= timeLimit) {
        throw new Error(\"The text still doesn't match: `\" + computedEntry + \"` != `\" + value + \"`\");
    }
}""",
]
wait = false
checkResult = true
