{
  "instructions": [
    "const timeLimit = page.getDefaultTimeout();\nconst timeAdd = 50;\nlet allTime = 0;\nlet parseWaitForProp = null;\nlet nonMatchingProps;\nwhile (true) {\n    while (true) {\n        parseWaitForProp = await page.$(\"a\");\n        if (parseWaitForProp !== null) {\n            break;\n        }\n        await new Promise(r => setTimeout(r, timeAdd));\n        if (timeLimit === 0) {\n            continue;\n        }\n        allTime += timeAdd;\n        if (allTime >= timeLimit) {\n            throw new Error(\"The following CSS selector \\\"a\\\" was not found\");\n        }\n    }\n    nonMatchingProps = await page.evaluate(e => {\n        const nonMatchingProps = [];\n        let computedEntry;\n        const parseWaitForPropDict = {\"x\":\"1\",\"y\":\"2\"};\n        for (const [parseWaitForPropKey, parseWaitForPropValue] of Object.entries(parseWaitForPropDict)) {\n            if (e[parseWaitForPropKey] === undefined) {\n                nonMatchingProps.push(\"No property `\" + parseWaitForPropKey + \"`\");\n                continue;\n            }\n            computedEntry = e[parseWaitForPropKey];\n            if (computedEntry !== parseWaitForPropValue) {\n                nonMatchingProps.push(parseWaitForPropKey + \": (`\" + computedEntry + \"` != `\" + parseWaitForPropValue + \"`)\");\n            }\n        }\n        return nonMatchingProps;\n    }, parseWaitForProp);\n    if (nonMatchingProps.length === 0) {\n        break;\n    }\n    await new Promise(r => setTimeout(r, timeAdd));\n    if (timeLimit === 0) {\n        continue;\n    }\n    allTime += timeAdd;\n    if (allTime >= timeLimit) {\n        const props = nonMatchingProps.join(\", \");\n        throw new Error(\"The following properties still don't match: [\" + props + \"]\");\n    }\n}"
  ],
  "wait": false,
  "warnings": [
    "Pseudo-elements (`::after`) don't have properties so the check will be performed on the element itself"
  ],
  "checkResult": true
}
