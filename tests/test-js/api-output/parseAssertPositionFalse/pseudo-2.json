{
  "instructions": [
    "let parseAssertPosition = await page.$(\"a\");\nif (parseAssertPosition === null) { throw '\"a\" not found'; }\nawait page.evaluate(elem => {\n    const errors = [];\n    function checkAssertPosBrowser(e, field, styleField, kind, value, errors) {\n        let v = e.getBoundingClientRect()[field];\n        let pseudoStyle = window.getComputedStyle(e, \"::after\");\n        let style = window.getComputedStyle(e);\n        v += browserUiTestHelpers.extractFloatOrZero(pseudoStyle[field]) - browserUiTestHelpers.extractFloatOrZero(style[styleField]);\n        let roundedV = Math.round(v);\n        if (v === value || roundedV === Math.round(value)) {\n            errors.push(\"same \" + kind + \" values (whereas it shouldn't): \" + v + \" (or \" + roundedV + \") != \" + value);\n        }\n    }\n    checkAssertPosBrowser(elem, 'top', 'marginTop', 'Y', 1, errors);\n    if (errors.length !== 0) {\n        const errs = errors.join(\", \");\n        throw \"The following errors happened: [\" + errs + \"]\";\n    }\n}, parseAssertPosition);"
  ],
  "warnings": [],
  "wait": false,
  "checkResult": true
}
