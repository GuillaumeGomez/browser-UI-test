instructions = [
  """let parseAssertElemProp = await page.$$(\"a\");
if (parseAssertElemProp.length === 0) { throw '\"a\" not found'; }
for (let i = 0, len = parseAssertElemProp.length; i < len; ++i) {
    await page.evaluate(e => {
        const nonMatchingProps = [];
        const parseAssertElemPropDict = {\"a\":\"1\"};
        const undefProps = [];
        for (const prop of undefProps) {
            if (e[prop] !== undefined) {
                continue;
            }
        nonMatchingProps.push(\"Property named `\" + prop + \"` doesn't exist\");
        }
        for (const [parseAssertElemPropKey, parseAssertElemPropValue] of Object.entries(parseAssertElemPropDict)) {
            if (e[parseAssertElemPropKey] === undefined) {
                continue;
            }
            if (String(e[parseAssertElemPropKey]) == parseAssertElemPropValue) {
                nonMatchingProps.push(\"assert didn't fail for property `\" + parseAssertElemPropKey + '`');
            }
        }
        if (nonMatchingProps.length !== 0) {
            const props = nonMatchingProps.join(\", \");
            throw \"The following errors happened (for selector `a`): [\" + props + \"]\";
        }
    }, parseAssertElemProp[i]);
}""",
]
wait = false
warnings = [
  """Pseudo-elements (`::after`) don't have attributes so the check will be performed on the element itself""",
]
checkResult = true
