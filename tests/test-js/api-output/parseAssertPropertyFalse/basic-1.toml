instructions = [
  """let parseAssertElemProp = await page.$(\"a\");
if (parseAssertElemProp === null) { throw '\"a\" not found'; }
await page.evaluate(e => {
    const nonMatchingProps = [];
    const parseAssertElemPropDict = {};
    const undefProps = [];
    for (const prop of undefProps) {
        if (e[prop] !== undefined && e[prop] !== null) {
            continue;
        }
        nonMatchingProps.push(\"Property named `\" + prop + \"` doesn't exist\");
    }
    for (const [parseAssertElemPropKey, parseAssertElemPropValue] of Object.entries(parseAssertElemPropDict)) {
        if (e[parseAssertElemPropKey] === undefined || e[parseAssertElemPropKey] === null) {
            continue;
        }
        if (String(e[parseAssertElemPropKey]) == parseAssertElemPropValue) {
            nonMatchingProps.push(\"assert didn't fail for property `\" + parseAssertElemPropKey + '`');
        }
    }
    if (nonMatchingProps.length !== 0) {
        const props = nonMatchingProps.join(\", \");
        throw \"The following errors happened (for selector `a`): [\" + props + \"]\";
    }
}, parseAssertElemProp);""",
]
wait = false
warnings = [
]
checkResult = true
