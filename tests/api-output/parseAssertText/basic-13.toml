instructions = [
  """async function checkTextForElem(elem) {
    await elem.evaluate(e => {
        const errors = [];
        const value = \"b\";
        const elemText = browserUiTestHelpers.getElemText(e, value);
        if (!elemText.includes(value)) {
            errors.push(\"`\" + elemText + \"` doesn't contain `\" + value + \"` (for CONTAINS check)\");
        }
        if (errors.length !== 0) {
            const errs = errors.join(\"; \");
            throw \"The following errors happened: [\" + errs + \"]\";
        }
    });
}

const parseAssertElemStr = await page.$$(\"a\");
if (parseAssertElemStr.length === 0) { throw \"`a` not found\"; }
for (const elem of parseAssertElemStr) {
    await checkTextForElem(elem);
}""",
]
wait = false
checkResult = true
warnings = [
]
