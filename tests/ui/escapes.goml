// This test ensures that the escapes are handled correctly.
go-to: "file://" + |CURRENT_DIR| + "/" + |DOC_PATH| + "/elements.html"
// This one checks the handling of single quotes.
assert-css: ("input[id='the-input']", {"height": "10px"})
// This one checks the handling of `\` in a CSS selector.
assert-css: ("#useless\.input", {"height": "10px"})
// Checking escape in dict.
assert-css-false: ("#useless\.input", {"\"\\height": "10px"})
assert-false: '"a'

// This one ensures that string are correctly escaped when stored in variables.
store-css: ("#another-one::after", {"content": content})
// FIXME: We need to escape quotes too many times, it's wrong.
assert: |content| == "url(\"data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"></svg>\")"

expect-failure: true
click: '"a'
// Checking backline.
assert: ("//*
b")
expect-failure: false
go-to: "file://" + |WINDOWS_PATH| + "\\d\\elements.html"
//~^ ERROR: Cannot navigate to invalid URL `file://C:\a\b\d\elements.html`
// Shouldn't be run.
assert: 12 == 13
