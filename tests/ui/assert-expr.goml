// This test is meant to ensure that `assert*` commands work with expressions.
go-to: "file://" + |CURRENT_DIR| + "/" + |DOC_PATH| + "/elements.html"
assert-false: 1 > 2
store-value: (var, 1)
assert: 1 == |var|
assert-false: |var| > 2
store-value: (var2, "a")
assert: |var2| == "a"
assert-false: |var2| != "a"
store-value: (var3, {"a": 2})
assert: {"a": 2} == |var3|
assert-false: {"a": 2} != |var3|
assert: (1, "a") == (1, "a")
assert: [1, 2] == [1, 2]
assert: ["1", "2"] != ["1", "2"]
//~^ ERROR: Condition `["1", "2"] != ["1", "2"]` (`!compareArrayLike(["1", "2"], ["1", "2"])`) was evaluated as false

// Checking order of operations.
store-value: (var, (1 + 2) * 4 + 1)
assert: |var| == 13
assert: |var| != 12 && 1 < 2
assert: 1 + 2 + "a" == "3a"
assert: 1 + 2 + "a" + (4 * 3) == "3a12"

assert: |var| != 13
//~^ ERROR: Condition `|var| != 13` (`13 != 13`) was evaluated as false
assert-false: |var| == 13
//~^ ERROR: assert didn't fail
assert: |var2| == |var|
//~^ ERROR: Condition `|var2| == |var|` (`"a" == 13`) was evaluated as false
assert: {"b": 3} == |var3|
//~^ ERROR: Condition `{"b": 3} == |var3|` (`compareJson({"b": 3}, {"a": 2})`) was evaluated as false
assert: (1, "a") == (2, 3)
//~^ ERROR: Condition `(1, "a") == (2, 3)` (`compareArrayLike([1, "a"], [2, 3])`) was evaluated as false
assert: [1, 2] == ["a", "b"]
//~^ ERROR: Condition `[1, 2] == ["a", "b"]` (`compareArrayLike([1, 2], ["a", "b"])`) was evaluated as false
