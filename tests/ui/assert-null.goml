// This test is meant to ensure that "null" checks are working as expected.
go-to: "file://" + |CURRENT_DIR| + "/" + |DOC_PATH| + "/elements.html"
//
// assert-attribute
//
assert-attribute: ("header", {"whatever": null})
assert-attribute: (".content", {"nb-value": null})
//~^ ERROR: [Expected attribute `nb-value` to not exist, found: `12`]
assert-attribute-false: (".content", {"nb-value": null})
assert-attribute-false: ("header", {"whatever": null})
//~^ ERROR: [Attribute named `whatever` doesn't exist]
// Should succeed.
set-attribute: ("header", {"nb-value": "a", "b": "c"})
assert-attribute: ("header", {"nb-value": "a", "b": "c"})
set-attribute: ("header", {"nb-value": null, "b": "d"})
assert-attribute: ("header", {"nb-value": null, "b": "d"})

// Checking the warnings.
// There should be no warning for this one.
assert-attribute: ("header", {"whatever": null}, ALL)
assert-attribute: ("header", {"whatever": null}, CONTAINS)
//~^ WARNING: Special checks (CONTAINS) will be ignored for `null`
assert-attribute: ("header", {"whatever": null}, [ALL, CONTAINS])
//~^ WARNING: Special checks (CONTAINS) will be ignored for `null`

//
// assert-property
//
assert-property: ("header", {"yolo": null})
assert-property: (".content", {"bgColor": null})
assert-property-false: ("header", {"bgColor": null})
//~^ ERROR: [Property named `"bgColor"` doesn't exist]
assert-property-false: ("header", {"yolo": null})
//~^ ERROR: [Property named `"yolo"` doesn't exist]
// Should succeed.
set-property: ("header", {"yolo": "a", "b": "c"})
assert-property: ("header", {"yolo": "a", "b": "c"})
set-attribute: ("header", {"yolo": null, "b": "d"})
assert-attribute: ("header", {"yolo": null, "b": "d"})

// Checking the warnings.
// There should be no warning for this one.
assert-property: ("header", {"whatever": null}, ALL)
assert-property: ("header", {"whatever": null}, CONTAINS)
//~^ WARNING: Special checks (CONTAINS) will be ignored for `null`
assert-property: ("header", {"whatever": null}, [ALL, CONTAINS])
//~^ WARNING: Special checks (CONTAINS) will be ignored for `null`
// Checking the mention to nth element failed
assert-property: ("header", {"whatever": "a"}, ALL)
//~^ ERROR: [Unknown property `"whatever"`] (on the element number 0)

//
// assert-document-property
//
assert-document-property: {"yolo": null}
assert-document-property: {"bgColor": null}
//~^ ERROR: [Expected property `"bgColor"` to not exist, found: ``]
assert-document-property-false: {"bgColor": null}
assert-document-property-false: {"yolo": null}
//~^ ERROR: [Property named `"yolo"` doesn't exist]

// Checking the warnings.
assert-document-property: ({"yolo": null}, CONTAINS)
//~^ WARNING: Special checks (CONTAINS) will be ignored for `null`
